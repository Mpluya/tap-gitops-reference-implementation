---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    provider: "aws"
    vpc: "default"
  name: xpostgresqlinstances.database.rds.example.org
spec:
  compositeTypeRef:
    apiVersion: database.rds.example.org/v1alpha1
    kind: XPostgreSQLInstance
  publishConnectionDetailsWithStoreConfigRef:
    name: default
  resources:
  - name: dbsubnetgroup
    base:
      apiVersion: rds.aws.upbound.io/v1beta1
      kind: SubnetGroup
      spec:
        forProvider:
          description: "cg eks run-prod subnet group"
          region: us-west-2
          subnetIds:
            - subnet-0542118f0e4715019
            - subnet-07ea5c1dcbebce36c
            - subnet-095176809c77e6593
            - subnet-0352c78d23acdd082
            - subnet-015d77dfab6ef1eaa
            - subnet-09ac9390418eee635
  - name: securitygroup
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroup
      spec:
        forProvider:
          description: Allow access to PostgreSQL
          groupName: crossplane-postgres-getting-started
          ingress:
            - fromPort: 5432
              ipProtocol: tcp
              ipRanges:
                - cidrIp: 0.0.0.0/0
                  description: Everywhere
              toPort: 5432
          region: us-west-2
          vpcId: vpc-06cdffae443c031a7
  - name: instance
    base:
      apiVersion: rds.aws.upbound.io/v1beta1
      kind: Instance
      spec:
        forProvider:
          # NOTE: configure this section to your specific requirements
          instanceClass: db.t3.micro
          autoGeneratePassword: true
          passwordSecretRef:
            key: password
            namespace: crossplane-system
          engine: postgres
          engineVersion: "13.7"
          name: postgres
          username: masteruser
          publiclyAccessible: true
          region: us-west-2
          skipFinalSnapshot: true
          dbSubnetGroupNameSelector:
            matchControllerRef: true
          vpcSecurityGroupIds: []
          vpcSecurityGroupIDSelector:
            matchControllerRef: true
        writeConnectionSecretToRef:
          namespace: crossplane-system
    connectionDetails:
    - name: type
      value: postgresql
    - name: provider
      value: aws
    - name: database
      value: postgres
    - fromConnectionSecretKey: username
    - fromConnectionSecretKey: password
    - name: host
      fromConnectionSecretKey: address
    - fromConnectionSecretKey: port
    patches:
    - fromFieldPath: metadata.uid
      toFieldPath: spec.forProvider.passwordSecretRef.name
      transforms:
      - string:
          fmt: '%s-postgresql-pw'
          type: Format
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - string:
          fmt: '%s-postgresql'
          type: Format
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: spec.storageGB
      toFieldPath: spec.forProvider.allocatedStorage
      type: FromCompositeFieldPath